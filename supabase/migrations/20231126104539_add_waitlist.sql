create table "public"."waitlist" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null
);


alter table "public"."waitlist" enable row level security;

alter table "public"."user_metadata" drop column "is_onboarded";

alter table "public"."user_metadata" add column "onboarding_status" text default 'NEW'::text;

CREATE UNIQUE INDEX waitlist_pkey ON public.waitlist USING btree (id);

CREATE UNIQUE INDEX waitlist_user_id_key ON public.waitlist USING btree (user_id);

alter table "public"."waitlist" add constraint "waitlist_pkey" PRIMARY KEY using index "waitlist_pkey";

alter table "public"."waitlist" add constraint "waitlist_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."waitlist" validate constraint "waitlist_user_id_fkey";

alter table "public"."waitlist" add constraint "waitlist_user_id_key" UNIQUE using index "waitlist_user_id_key";

create policy "Users can insert their own rows"
on "public"."waitlist"
as permissive
for insert
to authenticated
with check ((auth.uid() = user_id));



